{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","ref","useRef","openToolTip","current","open","setLoading","useState","currentLink","setCurrentLink","loading","isDark","setIsDark","serverResponse","setResponse","useEffect","document","body","classList","add","remove","handleKeyDown","event","a","key","requestServer","requestOptions","method","headers","JSON","stringify","link","fetch","response","json","data","console","log","useMediaQuery","query","undefined","isSystemDark","className","src","modal","nested","id","style","margin","checked","onChange","target","icons","unchecked","color","type","value","placeholder","e","onKeyDown","Button","variant","disabled","onClick","href","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc28dbce.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState, ReactElement } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MyDropZone from './component/customDropzoen';\nimport { gsap } from 'gsap';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport { PopupActions } from 'reactjs-popup/dist/types';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\"\nimport { FaSun, FaMoon } from 'react-icons/fa';\nimport { useMediaQuery } from 'react-responsive';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Linkedin, Github, Sun } from 'react-bootstrap-icons';\n \nfunction App() {\n\n  const ref = useRef<PopupActions>(null);\n  const openToolTip = () => {\n    ref?.current?.open()\n    setLoading(false);\n  };\n\n\n  // https://www.pokepedia.fr/images/thumb/f/fa/Latios-RS.png/250px-Latios-RS.png\n  const [currentLink, setCurrentLink] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isDark, setIsDark] = useState(true);\n  const [serverResponse, setResponse] = useState('');\n\n  useEffect(() => {\n    if (isDark) {\n      document.body.classList.add('dark');\n    } else {\n      document.body.classList.remove('dark');\n    }\n  }, [isDark]); \n\n  const handleKeyDown = async (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      requestServer();\n    }\n  }\n\n  const onClick = (e: React.MouseEventHandler<HTMLButtonElement>) => {\n    requestServer();\n  }\n\n  const requestServer = async () => {\n    if (currentLink == '') {\n      return;\n    }\n    setLoading(true)\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({ link: currentLink })\n    }\n\n    // TODO: Change l'url ici pour tes propres request\n    const response = await fetch(\"https://pokedex-preproc.herokuapp.com/\", requestOptions);\n    const data = await response.json();\n    console.log(data);\n    setResponse(data?.response);\n    openToolTip();\n  }\n\n  const systemPreferDark = useMediaQuery(\n    {\n      query: \"(prefers-color-scheme: dark)\"\n    },\n    undefined,\n    (isSystemDark: boolean) => setIsDark(isSystemDark)\n  );\n\n  return (\n    <div className=\"App\">\n      {console.log('render', loading)}\n      {loading\n        ? <div className=\"overlay\"><img src={'https://media3.giphy.com/media/IQebREsGFRXmo/200.gif'}/></div>\n        : <div></div>\n      }\n\n      <Popup\n        modal\n        nested\n        className=\"response-popup\"\n        ref={ref}>\n        <div id=\"response-popup-content\">\n          <img className=\"pikachu\" src={currentLink} />\n          <p style={{ margin: '1em' }}> {serverResponse} </p>\n        </div>\n      </Popup>\n      <div className=\"content\">\n        <div className=\"header\">\n          <div>\n            <img className=\"pikachu\" src={'/poke-front/pikachu.png'} />\n          </div>\n          <div className=\"toggle-position\">\n            <Toggle\n              className=\"toggle-style\"\n              checked={isDark}\n              onChange={({ target }) => setIsDark(target.checked)}\n              icons={{ checked: <FaMoon />, unchecked: <Sun color=\"white\" />}}\n            />\n          </div>\n        </div>\n\n        {/* text input goes here */}\n        \n        <div style={{ margin: \"0.5em\"}}>\n          <input className=\"Text-input\" type=\"text\" value={currentLink} placeholder=\"Your link here...\" onChange={(e) => setCurrentLink(e.target.value)}\n          onKeyDown={(e) => {\n            handleKeyDown(e)\n          }}/>\n          <Button variant=\"outline-primary\" disabled={loading} onClick={(e) => { if (!loading) { requestServer(); }}}> {loading ? 'Loading...' : 'Go' } </Button>{' '}\n        </div>\n      </div>\n\n      <footer className=\"App-footer\">\n        <div className=\"links\">\n          <a href=\"#\"><Linkedin /></a>\n          <a href=\"#\"><Github /></a>\n        </div>\n        <p style={{ paddingTop: '0.6em' }}>Lorem ipsum dolor sit amet, consectetur adipiscing elit</p>\n        <p className=\"copyright\">Â©2021 - Morbi tincidunt magna leo</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}